<jQuery>
- javascript 라이브러리!!
- html을 쉽게 접근하고 문서조작을 간편하게 하는 제품. ----> 추가함수

- el(expression language) : JSP페이지에서만 사용.
  '${출력할 내용}'  == 자바!!
    위치:
     <head>
        <script>
          var str= '${username}';
          alert('${username}')
        </script>
     </head>  
     <body>
         ${msg}   {emp.ename}
        <a href="${path}/baby.jpg">이동</a>
        
        <%
            ${msg}   ----> 에러발생? 에러발생!!  (service()메소드내에 들어갈 자바코드만 위치)
        
        %> 
     </body>  

  jQuery  : HTML 또는 JSP내의   JavaScript영역내에서 사용.
  '$(선택자)'
  
     <head>
       <script>
        var str= $('div');
        $('div').click(function(){});
       </script>
     </head>
     <body>
       <script> 
          alert($('div').text());
       </script>
       $('div')  ----> 에러? 에러는 발생하지 않고 텍스트로 인식함!! 
     </body>
     

jQuery문법)
   $(선택자).action(할일);
   
   $(선택자) : 문서내의 엘리먼트 집합을 얻어오는 기능
            action=이벤트함수
                      할일 정의는  익명의 함수로 표현!!  function(){}  : 콜백함수 
  
   $(선택자).action(function(){}); ★
   
선택자 종류)
   $("태그명")
       예 ===>  $("div") : 모든 div엘리먼트들
       
   $(".클래스명")
      예 ===>  $('.div') : 속성으로 class='div'를 갖는 엘리먼트 들           
   
   $("#아이디명")
      예 ===>  $('#div') : 속성으로 id='div'를 갖는 엘리먼트
  --------------------------------------------------------
  
   $('a.b')  : <a>엘리먼트 중  <a class='b'>인 엘리먼트 들
   
   $('a,b')  : <a> 또는 <b> 엘리먼트 들
        
   $('a b')  : <a>를 부모로 갖는 <b>엘리먼트
       
   $('[href]') : 현재 속성값으로 href속성이 있는 엘리먼트 들
                         예)   <a>텍스트</a>                : 미적용
                   <a href="경로">텍스트</a>     : 적용
                   <link href="경로">          : 적용
       
   $('a[href]') : <a>엘리먼트 중 href속성이 있는 엘리먼트
                    예)  <a href="경로">텍스트</a>     : 적용
               <link href="경로">           : 미적용
       
   $('a[href="http://daum.net"]')
            : <a>엘리먼트의 href속성값이 'http://daum.net'인 엘리먼트
   
   $('a[href!="http://daum.net"]')
            : <a>엘리먼트의 href속성값이 'http://daum.net'이 아닌 엘리먼트
       
   $('*') : HTML구성하는 모든엘리먼트
   
   $(this) : 보통 이벤트를 발생시킨 한 개의 엘리먼트를 표현
   
   $(document) : document객체표현
   
   $('li:first')  : 첫번째 <li>엘리먼트
   $('ul li:first')  : <ul>의 첫번째 자식 <li>엘리먼트 한개
       <ul>
          <li>      <---- 적용
          <li>
       </ul>
       <ul>
          <li>      <---- 미적용
          <li>
       </ul>
   
   $('li:last')   : 마지막 <li>엘리먼트
   
   $('ul li:first-child')  : <ul>의 첫번째 자식 <li>엘리먼트 한개
       <ul>
          <li>      <---- 적용
          <li>
       </ul>
       <ul>
          <li>      <---- 적용
          <li>
       </ul>
   $(':button')   : <input type=button>과 <button>엘리먼트 들
   
   $('tr:even')
   
   $('tr:odd')
   
   <table>
      <tr></tr> 0    <--- even
      <tr></tr> 1    <--- odd
      <tr></tr> 2    <--- even
      <tr></tr> 3    <--- odd
   </table>   

-------------------------------------------------------------------------
   $('선택자').action(할일);
   $('선택자').action(function(){});

※ HTML문서가 브라우저에 출력(load적재)되었을때
   - window.onload=function(){}
   - $(document).ready(function(){});
       ---> HTML문서가 서비스할 준비가 되었을 때~
   - $(function(){}) == jQuery(function(){})
-------------------------------------------------------------------------
<on함수 사용>
- 한 엘리먼트에 여러개의 이벤트를 정의할 때.
   $("p").on({
    mouseenter: function(){
        $(this).css("background-color", "lightgray");
    }, 
    mouseleave: function(){
        $(this).css("background-color", "lightblue");
    }, 
    click: function(){
        $(this).css("background-color", "yellow");
    } 
   });
   ===> <p>엘리먼트에 mouseenter,mouseleave,click등 여러 이벤트 적용!!
   
- 동적으로 생성되는 엘리먼트의 부모엘리먼트를 미리 등록하고 있다가 
  새로 생성되는 자식엘리먼트의 이벤트를 처리할 때.

   $('부모셀렉터').on('이벤트','자식셀렉터',할일);

    	 ----> document.ready하면서 부모셀렉터에 대한 '액션이벤트'를 정의하고
    	       동적으로 생성되는 자식엘리먼트에 대한 이벤트를 처리할 수 있음!!
    	       
   $(document).ready(function(){
       $('div').on('click','button',function(){
          ----> 문서가 로딩되었을때 div(부모)액션을 먼저 잡고 있다가
                동적으로(원래문서에 없고 새로 생성된) 생성된 button(자식)이 클릭되었을때의 이벤트 적용!!
       });
   });
   
==============================================================================
<HTML문서내의 데이터를 얻거나 정하기>
- ★관련함수 : text(), html(), and val()

- text()
   - 선택된 엘리먼트로 부터 내용(텍스트데이터)을 얻거나 정할 때 사용.
   - innerText속성과 비슷.
   
예) 값 얻어오기
  <div id='d1'>안녕 jQuery~!!</div>
  
  1. JavaScript:
    var str = document.getElementsByTagName('div').item(0).textContent; 
                          NodeList                  <div>

    var d1 = document.getElementById('d1');
    var str2 = d1.innerText;                          
                          
  2. jQuery:
    var str3 = $('div').text();  //단 태그는 제외!!

예) 값 설정
    $('div').text('설정할 내용');
    
    - <div></div>
     
       ---> $('div').text('대한민국만세');
       ---> <div>대한민국만세</div>
    
- html()
    - 선택된 엘리먼트로 부터 내용(텍스트데이터)을 얻거나 정할 때 사용.
    - text()함수와 차이점은 HTML마크업을 포함, 적용함!!
    - innerHTML속성과 비슷.
    
  1. 값 얻어오기
       var 변수명 = $('선택자').html();
  2. 값 설정
       $('선택자').html('설정할 내용텍스트 또는 태그');
  
- val()
   - 폼 안의 데이터를 얻거나 정할 때 사용.
   
  예) <form name='frm'>
             이름: <input type=text name=username value='기본값' id='un'>
       <textarea>내용</textarea>
    </form> 

  1. JavaScript
       var name = document.frm.username.value;
                = document.getElementById('un').value;
                
  2. jQuery
       var name2= $('form input[name=username]').val();
                = $('[name=username]').val();
                = $('#un').val();
  
   값설정)  '기본값'  ---> '나길동'
     $('#un').val('나길동');